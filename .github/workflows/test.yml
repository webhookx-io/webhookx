name: Test

on:
  pull_request:
    paths-ignore:
      - '**/*.md'
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: run tests
      run: make test-coverage

    - name: upload coverage reselt to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        flags: unit

    services:
      httpbin:
        image: kennethreitz/httpbin
        ports:
          - 9999:80

  integration-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: install
        run: make install

      - name: run tests
        run: make test-integration-coverage

      - name: upload coverage reselt to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          flags: integration

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: webhookx
          POSTGRES_DB: webhookx
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 3s --health-timeout 5s --health-retries 3

      redis:
        image: redis:6
        ports:
          - 6379:6379

      httpbin:
        image: kennethreitz/httpbin
        ports:
          - 9999:80

  test-docker-compose:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: test docker compose
        run: |
          docker build . -t webhookx-io/webhookx:latest
          docker compose up -d
          sleep 10
          curl http://localhost:8080
