# ---------------------------
# WebhookX configuration file
# ---------------------------

log:
  file: /dev/stdout
  level: info   # supported values are debug, info, warn, and error.
  format: text  # supported values are "text" and "json"

access_log:
  file: /dev/stdout
  format: text  # supported values are "text" and "json"

database:
  host: localhost
  port: 5432
  username: webhookx
  password:
  database: webhookx
  parameters: 'application_name=webhookx&sslmode=disable&connect_timeout=10'  # The connection uri parameters.
                                                                              # See https://www.postgresql.org/docs/current/libpq-connect.html
  max_pool_size: 40                                                           # The maximum number of connections
  max_lifetime: 1800                                                          # The maximum lifetime (in seconds) of a connection

redis:
  host: localhost
  port: 6379
  password:
  database: 0

#------------------------------------------------------------------------------
# Cluster
#------------------------------------------------------------------------------
#role: standalone                   # Enables cluster mode.
                                    # This allows some nodes in the cluster to run as the control plane
                                    # and others to run as the data plane.
                                    #
                                    # supported values are:
                                    #
                                    # - `standalone`: disable cluster mode.
                                    # - `cp`: this node runs as the control plane.
                                    #   It connects to the database to provide entity management.
                                    # - `dp_proxy`: this node runs as the Proxy data plane.
                                    # - `dp_worker`: this node runs as the Worker data plane.

anonymous_reports: true             # sends anonymous data such as software version to WebhookX.

#------------------------------------------------------------------------------
# ADMIN
#------------------------------------------------------------------------------

admin:
  #listen: 127.0.0.1:8080
  #debug_endpoints: true             # enables debugging and profiling endpoints. see https://pkg.go.dev/net/http/pprof
  #tls:
  #  cert: /path/to/server.crt
  #  key: /path/to/server.key

#------------------------------------------------------------------------------
# STATUS
#------------------------------------------------------------------------------

status:
  listen: 127.0.0.1:8082
  debug_endpoints: true              # enables debugging and profiling endpoints. see https://pkg.go.dev/net/http/pprof

#------------------------------------------------------------------------------
# WORKER
#------------------------------------------------------------------------------

worker:
  enabled: false                    # Whether to enable the Worker.
  deliverer:
    timeout: 60000                  # Sets the request timeout (in milliseconds) for delivery requests.
    acl:                            # Access Control List (ACL) defines rules to control outbound network access.
                                    # A rule is a string of IPv4, IPv6, CIDR, hostname, or pre-configured group.
                                    # A hostname can contain a wildcard prefix (*.) represents its subdomains, and Unicode
                                    # characters need to be converted to Punycode.
                                    # The list of pre-configured groups:
                                    # - @default: [ '@private', '@loopback', '@linklocal', '@reserved' ]
                                    # - @private: [ '10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16' ]
                                    # - @loopback: [ '127.0.0.0/8', '::1/128' ]
                                    # - @linklocal: [ '169.254.0.0/16', 'fe80::/10' ]
                                    # - @reserved: [ '0.0.0.0/8', '100.64.0.0/10', '192.0.0.0/24', '224.0.0.0/4', '240.0.0.0/4', 'fc00::/7' ]
                                    #
      deny:                         # `deny` defines a list of rules that deny access.
        - '@default'                # Example:
                                    # deny:
                                    #   - '@default'
                                    #   - '23.215.0.136'
                                    #   - '2606:2800:220:1:248:1893:25c8:1946'
                                    #   - '*.example.com'
                                    #
  pool:
    size: 10000                     # pool size, default to 10000.
    concurrency: 0                  # pool concurrency, default to 100 * CPUs

#------------------------------------------------------------------------------
# PROXY
#------------------------------------------------------------------------------
proxy:
  #listen: 127.0.0.1:8081
  #tls:
  #  cert: /path/to/server.crt
  #  key: /path/to/server.key
  timeout_read: 10                  # read timeout (in seconds), 0 indicates unlimited.
  timeout_write: 60                 # write timeout (in seconds), 0 indicates unlimited.
  max_request_body_size: 1048576
  response:
    code: 200
    content_type: application/json
    body: '{"message": "OK"}'

  queue:
    type: redis                     # supported values are redis, off
    redis:
      host: localhost
      port: 6379
      password:
      database: 0

#------------------------------------------------------------------------------
# METRICS
#------------------------------------------------------------------------------
metrics:
  attributes:                                   # global attributes for each metric
    env: prod
  #exports: [ opentelemetry ]                   # list of enabled vendor exports. supported value are opentelemetry
  push_interval: 10                             # interval(in seconds) at which metrics are sent to the OpenTelemetry Collector
  opentelemetry:
    protocol: http/protobuf                     # supported value are http/protobuf, grpc
    endpoint: http://localhost:4318/v1/metrics  # http/protobuf(http://localhost:4318/v1/metrics), grpc(localhost:4317)

#------------------------------------------------------------------------------
# TRACING
#------------------------------------------------------------------------------
tracing:
  enabled: false
  attributes:                                   # global attributes for each trace
    env: prod
  sampling_rate: 1.0
  opentelemetry:
    protocol: http/protobuf                     # supported value are http/protobuf, grpc
    endpoint: http://localhost:4318/v1/traces   # http/protobuf(http://localhost:4318/v1/traces), grpc(localhost:4317)
