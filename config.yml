# ---------------------------
# WebhookX configuration file
# ---------------------------

log:
  file: /dev/stdout
  level: info   # supported values are debug, info, warn, and error.
  format: text  # supported values are text and json

database:
  host: localhost
  port: 5432
  username: webhookx
  password:
  database: webhookx
  parameters: 'application_name=webhookx&sslmode=disable&connect_timeout=10'  # The connection uri parameters.
                                                                              # See https://www.postgresql.org/docs/current/libpq-connect.html
  max_pool_size: 40                                                           # The maximum number of connections
  max_lifetime: 1800                                                          # The maximum lifetime (in seconds) of a connection

redis:
  host: localhost
  port: 6379
  password:
  database: 0



#------------------------------------------------------------------------------
# ADMIN
#------------------------------------------------------------------------------

admin:
  #listen: 127.0.0.1:8080

#------------------------------------------------------------------------------
# WORKER
#------------------------------------------------------------------------------

worker:
  enabled: false
  deliverer:
    timeout: 60000
  pool:
    size: 10000                     # pool size, default to 10000.
    concurrency: 0                  # pool concurrency, default to 100 * CPUs

#------------------------------------------------------------------------------
# PROXY
#------------------------------------------------------------------------------
proxy:
  #listen: 127.0.0.1:8081
  timeout_read: 10                  # read timeout (in seconds), 0 indicates unlimited.
  timeout_write: 60                 # write timeout (in seconds), 0 indicates unlimited.
  max_request_body_size: 1048576
  response:
    code: 200
    content-type: application/json
    body: '{"message": "OK"}'

  queue:
    type: redis                     # supported values are redis, off
    redis:
      host: localhost
      port: 6379
      password:
      database: 0

#------------------------------------------------------------------------------
# METRICS
#------------------------------------------------------------------------------
metrics:
  attributes:                                   # global attributes for each metric
    env: prod
  #exports: [ opentelemetry ]                   # list of enabled vendor exports. supported value are opentelemetry
  opentelemetry:
    push_interval: 10                           # interval(in seconds) at which metrics are sent to the OpenTelemetry Collector
    protocol: http/protobuf                     # supported value are http/protobuf, grpc
    endpoint: http://localhost:4318/v1/metrics  # http/protobuf(http://localhost:4318/v1/metrics), grpc(localhost:4317)
