# ------------------------------------
# WebhookX Configuration YAML file
# ------------------------------------
log:
  file: /dev/stdout     # Specifies the log file.
  level: info           # Supported values: debug, info, warn, and error.
  format: text          # Supported values: text, json.

access_log:             # Access Log
  file: /dev/stdout     # Specifies the log file.
  format: text          # Supported values: text, json.

database:
  host: localhost
  port: 5432
  username: webhookx
  password:
  database: webhookx
  parameters: 'application_name=webhookx&sslmode=disable&connect_timeout=10'
                                  # Connection uri parameters.
                                  # See https://www.postgresql.org/docs/current/libpq-connect.html for more information.
  max_pool_size: 40               # Specifies the maximum number of connections.
  max_lifetime: 1800              # Specifies the maximum lifetime (in seconds) for a connection.

redis:
  host: localhost
  port: 6379
  password:
  database: 0

#------------------------------------------------------------------------------
# PROXY
#------------------------------------------------------------------------------
proxy:
  listen: 0.0.0.0:9600
  tls:                              # TLS configuration
    cert: ''                        # The path to TLS certificate. Example: /path/to/server.cert
    key: ''                         # The path to TLS certificate key. Example: /path/to/server.key
  timeout_read: 10                  # Specifies the maximum time (in seconds) for reading request. 0 disables timeout.
  timeout_write: 10                 # Specifies the maximum time (in seconds) for writing response. 0 disables timeout.
  max_request_body_size: 1048576    # Specifies the maximum request body size. Default is 1048576.
  response:                         # Default HTTP response
    code: 200
    content_type: application/json
    body: '{"message": "OK"}'
  queue:                            # Queue settings
    type: redis                     # Queue type. Supported values: redis, off.
    redis:
      host: localhost
      port: 6379
      password:
      database: 0

#------------------------------------------------------------------------------
# Admin API
# The Admin API provides RESTful APIs for managing entities.
#------------------------------------------------------------------------------
admin:
  listen: 127.0.0.1:9601
  debug_endpoints: false             # Whether to expose debugging and profiling endpoints.
                                     # See https://pkg.go.dev/net/http/pprof for more information.
  #tls:                              # TLS configuration
  #  cert: /path/to/server.crt       # The Path to TLS certificate.
  #  key: /path/to/server.key        # The path to TLS certificate key.

#------------------------------------------------------------------------------
# Status API
# The Status API provides APIs for retrieving runtime status about WebhookX.
#------------------------------------------------------------------------------
status:
  listen: 127.0.0.1:9602
  debug_endpoints: true              # Whether to expose debugging and profiling endpoints.
                                     # See https://pkg.go.dev/net/http/pprof for more information.

#------------------------------------------------------------------------------
# Worker
# The Worker sends events to destinations.
#------------------------------------------------------------------------------
worker:
  enabled: true                     # Whether to enable the Worker.
  deliverer:
    timeout: 60000                  # Sets the request timeout (in milliseconds) for delivery requests.
    acl:                            # Access Control List (ACL) defines rules to control outbound network access.
                                    # A rule is a string of IPv4, IPv6, CIDR, hostname, or pre-configured group.
                                    # A hostname can contain a wildcard prefix (*.) represents its subdomains, and Unicode
                                    # characters need to be converted to Punycode.
                                    # The list of pre-configured groups:
                                    # - @default: [ '@private', '@loopback', '@linklocal', '@reserved' ]
                                    # - @private: [ '10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16' ]
                                    # - @loopback: [ '127.0.0.0/8', '::1/128' ]
                                    # - @linklocal: [ '169.254.0.0/16', 'fe80::/10' ]
                                    # - @reserved: [ '0.0.0.0/8', '100.64.0.0/10', '192.0.0.0/24', '224.0.0.0/4', '240.0.0.0/4', 'fc00::/7' ]
                                    #
      deny:                         # `deny` defines a list of rules that deny access.
        - '@default'                # Example:
                                    # deny:
                                    #   - '@default'
                                    #   - '23.215.0.136'
                                    #   - '2606:2800:220:1:248:1893:25c8:1946'
                                    #   - '*.example.com'
                                    #
    #proxy:                         # Proxy server URL. Supports HTTP and HTTPS.
                                    # When a proxy is enabled, the ACL is automatically disabled.
                                    # Example of HTTP: http://<host>:<port>
                                    # Example of HTTPS: https://<host>:<port>
    #proxy_tls_cert:                # Path to the client certificate file used for mTLS proxy authentication.
    #proxy_tls_key:                 # Path to the client private key file used for mTLS proxy authentication.
    #proxy_tls_ca_cert:             # Path to the CA certificate file used to verify the HTTPS proxyâ€™s certificate.
    #proxy_tls_verify: true         # Whether to verify the proxy server's TLS certificate.

  pool:
    size: 10000                     # pool size, default to 10000.
    concurrency: 0                  # pool concurrency, default to 100 * CPUs

#------------------------------------------------------------------------------
# Cluster
#------------------------------------------------------------------------------
#role: standalone                   # Enables cluster mode.
                                    # This allows some nodes in the cluster to run as the control plane
                                    # and others to run as the data plane.
                                    #
                                    # supported values are:
                                    #
                                    # - `standalone`: disable cluster mode.
                                    # - `cp`: this node runs as the control plane.
                                    #   It connects to the database to provide entity management.
                                    # - `dp_proxy`: this node runs as the Proxy data plane.
                                    # - `dp_worker`: this node runs as the Worker data plane.

anonymous_reports: true             # sends anonymous data such as software version to WebhookX.


#------------------------------------------------------------------------------
# METRICS
#------------------------------------------------------------------------------
metrics:
  attributes:                                   # global attributes for each metric
    env: prod
  #exports: [ opentelemetry ]                   # list of enabled vendor exports. supported value are opentelemetry
  push_interval: 10                             # interval(in seconds) at which metrics are sent to the OpenTelemetry Collector
  opentelemetry:
    protocol: http/protobuf                     # Supported values: http/protobuf, grpc.
    endpoint: http://localhost:4318/v1/metrics  # http/protobuf(http://localhost:4318/v1/metrics), grpc(localhost:4317)

#------------------------------------------------------------------------------
# TRACING
#------------------------------------------------------------------------------
tracing:
  enabled: false
  attributes:                                   # global attributes for each trace
    env: prod
  sampling_rate: 1.0
  opentelemetry:
    protocol: http/protobuf                     # Supported value: http/protobuf, grpc.
    endpoint: http://localhost:4318/v1/traces   # http/protobuf(http://localhost:4318/v1/traces), grpc(localhost:4317)
